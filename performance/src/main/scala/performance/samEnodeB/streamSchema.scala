package performance.samEnodeB

import org.apache.spark.sql.Encoders
import java.sql.Timestamp
import org.apache.spark.sql.types.StructType
import org.apache.spark.sql.types.IntegerType
import org.apache.spark.sql.types.StringType
import org.apache.spark.sql.types.TimestampType
import org.apache.spark.sql.types.DoubleType
import org.apache.spark.sql.types.FloatType


object streamSchema {
  
  val Average_per_OFDMA_Symbol_RSSI_schema = new StructType()
                                  .add("Averageper-OFDMASymbolRSSI", IntegerType)
                                  .add("NE_VERSION", StringType)
                                  .add("NE_ID", IntegerType)
                                  .add("NE_NAME", StringType)
                                  .add("EVENT_TIME", TimestampType)
                                  .add("cNum", StringType)
                                  .add("mcID", StringType)
                                  .add("EarfcnDl", StringType)
                                  .add("_c8", StringType)
                                  .add("_c9", StringType)
                                  .add("_c10", StringType)
                                  .add("RssiSymbol0AvgdBm", DoubleType)
                                  .add("RssiSymbol0TotdBm", DoubleType)
                                  .add("RssiSymbol0Cntcount", DoubleType)
                                  .add("RssiSymbol1AvgdBm", DoubleType)
                                  .add("RssiSymbol1TotdBm", DoubleType)
                                  .add("RssiSymbol1Cntcount", DoubleType)
                                  .add("RssiSymbol2AvgdBm", DoubleType)
                                  .add("RssiSymbol2TotdBm", DoubleType)
                                  .add("RssiSymbol2Cntcount", DoubleType)
                                  .add("RssiSymbol3AvgdBm", DoubleType)
                                  .add("RssiSymbol3TotdBm", DoubleType)
                                  .add("RssiSymbol3Cntcount", DoubleType)
                                  .add("RssiSymbol4AvgdBm", DoubleType)
                                  .add("RssiSymbol4TotdBm", DoubleType)
                                  .add("RssiSymbol4Cntcount", DoubleType)
                                  .add("RssiSymbol5AvgdBm", DoubleType)
                                  .add("RssiSymbol5TotdBm", DoubleType)
                                  .add("RssiSymbol5Cntcount", DoubleType)
                                  .add("RssiSymbol6AvgdBm", DoubleType)
                                  .add("RssiSymbol6TotdBm", DoubleType)
                                  .add("RssiSymbol6Cntcount", DoubleType)
                                  .add("RssiSymbol7AvgdBm", DoubleType)
                                  .add("RssiSymbol7TotdBm", DoubleType)
                                  .add("RssiSymbol7Cntcount", DoubleType)
                                  .add("RssiSymbol8AvgdBm", DoubleType)
                                  .add("RssiSymbol8TotdBm", DoubleType)
                                  .add("RssiSymbol8Cntcount", DoubleType)
                                  .add("RssiSymbol9AvgdBm", DoubleType)
                                  .add("RssiSymbol9TotdBm", DoubleType)
                                  .add("RssiSymbol9Cntcount", DoubleType)
                                  .add("RssiSymbol10AvgdBm", DoubleType)
                                  .add("RssiSymbol10TotdBm", DoubleType)
                                  .add("RssiSymbol10Cntcount", DoubleType)
                                  .add("RssiSymbol11AvgdBm", DoubleType)
                                  .add("RssiSymbol11TotdBm", DoubleType)
                                  .add("RssiSymbol11Cntcount", DoubleType)
                                  .add("RssiSymbol12AvgdBm", DoubleType)
                                  .add("RssiSymbol12TotdBm", DoubleType)
                                  .add("RssiSymbol12Cntcount", FloatType)
								                  

val SINR_Distribution_schema= new StructType()
                                  .add("SINR_Distribution", IntegerType)
                                  .add("NE_VERSION", StringType)
                                  .add("NE_ID", IntegerType)
                                  .add("NE_NAME", StringType)
                                  .add("EVENT_TIME", TimestampType)
                                  .add("cNum", StringType)
                                  .add("EarfcnDl", StringType)
                                  .add("_c7", StringType)
                                  .add("_c8", StringType)
                                  .add("_c9", StringType)
                                  .add("_c10", StringType)
                                  .add("SinrDistULWbPreComp_Bin0_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin1_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin2_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin3_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin4_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin5_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin6_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin7_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin8_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin9_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin10_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin11_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin12_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin13_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin14_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin15_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin16_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin17_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin18_count", IntegerType)
                                  .add("SinrDistULWbPreComp_Bin19_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin0_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin1_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin2_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin3_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin4_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin5_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin6_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin7_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin8_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin9_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin10_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin11_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin12_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin13_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin14_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin15_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin16_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin17_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin18_count", IntegerType)
                                  .add("SinrDistULWbPostComp_Bin19_count", IntegerType)
                                  

  
    val schemaDict = Map("Average per-OFDMA Symbol RSSI" -> Average_per_OFDMA_Symbol_RSSI_schema,
                         "SINR Distribution" -> SINR_Distribution_schema)			
  
}